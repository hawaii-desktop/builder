# -*- python -*-
#
# This file is part of Hawaii.
#
# Copyright (C) 2015 Pier Luigi Fiorini <pierluigi.fiorini@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

from hawaiibuildbot import archlinux, fedora

# Build master configuration
c = BuildmasterConfig = {}

####### BUILDSLAVES

# The 'slaves' list defines the set of recognized buildslaves. Each element is
# a BuildSlave object, specifying a unique slave name and password.  The same
# slave name and password must be configured on the slave.

from buildbot.buildslave import BuildSlave

c["slaves"] = [BuildSlave("x86_64-archlinux-01", "password"),
               BuildSlave("x86_64-fedora-01", "password")]

# 'protocols' contains information about protocols which master will use for
# communicating with slaves.
# You must define at least 'port' option that slaves could connect to your master
# with this protocol.
# 'port' must match the value configured into the buildslaves (with their
# --master option)

c["protocols"] = {"pb": {"port": 9989}}

####### CHANGESOURCES

# the 'change_source' setting tells the buildmaster how it should find out
# about source code changes.  Here we point to the Hawaii packages clone.

from hawaiibuildbot.common.changes.gitpoller import GitPoller

image_repourl = "https://bitbucket.org/hawaii-fedora-ci/hawaii-kickstart.git"

c['change_source'] = []
# ArchLinux packages
c['change_source'].append(GitPoller(
        "git://github.com/hawaii-desktop/hawaii-pkgbuilds.git",
        workdir="gitpoller/archlinux/pkgbuilds", branch="master",
        category="archlinux-ci",
        ignoredAuthors=["Buildbot <buildbot@hawaiios.org>"],
        pollAtLaunch=True, pollinterval=300))
# Fedora CI packages
fedora_sources = {
    "captiva-icon-theme-git": {
        "upstream": {"repourl": "git://github.com/captiva-project/captiva-icon-theme.git"},
        "downstream": {"repourl": "https://bitbucket.org/hawaii-fedora-ci/captiva-icon-theme-git.git"}
    },
    "faba-icon-theme-git": {
        "upstream": {"repourl": "git://github.com/moka-project/faba-icon-theme.git"},
        "downstream": {"repourl": "https://bitbucket.org/hawaii-fedora-ci/faba-icon-theme-git.git"}
    },
    "qt5-qtwayland-git": {
        "upstream": {"repourl": "git://github.com/maui-packages/qtwayland.git", "branch": "output54"},
        "downstream": {"repourl": "https://bitbucket.org/hawaii-fedora-ci/qt5-qtwayland-git.git"}
    },
    "greenisland-git": {
        "upstream": {"repourl": "git://github.com/greenisland/greenisland.git"},
        "downstream": {"repourl": "https://bitbucket.org/hawaii-fedora-ci/greenisland-git.git"}
    },
    "hawaii-shell-git": {
        "upstream": {"repourl": "git://github.com/hawaii-desktop/hawaii-shell.git"},
        "downstream": {"repourl": "https://bitbucket.org/hawaii-fedora-ci/hawaii-shell-git.git"}
    },
    "hawaii-system-preferences-git": {
        "upstream": {"repourl": "git://github.com/hawaii-desktop/hawaii-system-preferences.git"},
        "downstream": {"repourl": "https://bitbucket.org/hawaii-fedora-ci/hawaii-system-preferences-git.git"}
    },
    "hawaii-baseapps-git": {
        "upstream": {"repourl": "git://github.com/hawaii-desktop/hawaii-baseapps.git"},
        "downstream": {"repourl": "https://bitbucket.org/hawaii-fedora-ci/hawaii-baseapps-git.git"}
    },
    "hawaii-icon-theme-git": {
        "upstream": {"repourl": "git://github.com/hawaii-desktop/hawaii-icon-themes.git"},
        "downstream": {"repourl": "https://bitbucket.org/hawaii-fedora-ci/hawaii-icon-theme-git.git"}
    },
    "hawaii-widget-styles-git": {
        "upstream": {"repourl": "git://github.com/hawaii-desktop/hawaii-widget-styles.git"},
        "downstream": {"repourl": "https://bitbucket.org/hawaii-fedora-ci/hawaii-widget-styles-git.git"}
    },
    "hawaii-wallpapers-git": {
        "upstream": {"repourl": "git://github.com/hawaii-desktop/hawaii-wallpapers.git"},
        "downstream": {"repourl": "https://bitbucket.org/hawaii-fedora-ci/hawaii-wallpapers-git.git"}
    },
    "sddm-git": {
        "upstream": {"repourl": "git://github.com/sddm/sddm.git"},
        "downstream": {"repourl": "https://bitbucket.org/hawaii-fedora-ci/sddm-git.git"}
    },
}
for pkgname in fedora_sources.keys():
    for sourcetype in fedora_sources[pkgname].keys():
        _workdir = "fedora/{}".format(pkgname) if sourcetype == "downstream" else "upstream/{}".format(pkgname)
        c["change_source"].append(GitPoller(
                fedora_sources[pkgname][sourcetype]["repourl"],
                workdir="gitpoller/{}".format(_workdir),
                branch=fedora_sources[pkgname][sourcetype].get("branch", "master"),
                category="fedora-ci",
                ignoredAuthors=["Buildbot <buildbot@hawaiios.org>"],
                pollAtLaunch=True, pollinterval=300))
# Image
c['change_source'].append(GitPoller(
        image_repourl,
        workdir="gitpoller/fedora/kickstarts", branch="master",
        category="image",
        ignoredAuthors=["Buildbot <buildbot@hawaiios.org>"],
        pollAtLaunch=True, pollinterval=300))

####### SCHEDULERS

# Configure the Schedulers, which decide how to react to incoming changes.

from buildbot.schedulers.basic import SingleBranchScheduler
from buildbot.schedulers.forcesched import ForceScheduler
from buildbot.schedulers.triggerable import Triggerable
from buildbot.schedulers.timed import Nightly
from buildbot.changes import filter

c["schedulers"] = []

# Rebuild ArchLinux packages when a change is submitted
c["schedulers"].append(SingleBranchScheduler(
                            name="archlinux-checkin",
                            change_filter=filter.ChangeFilter(branch="master", category="archlinux-ci"),
                            treeStableTimer=None,
                            builderNames=["archlinux-i686", "archlinux-x86_64"]))
# Manually trigger a rebuild of the ArchLinux repository
c["schedulers"].append(ForceScheduler(
                            name="archlinux-manual", label="Build ArchLinux repository",
                            builderNames=["archlinux-i686", "archlinux-x86_64"]))
c["schedulers"].append(Triggerable(
                            name="archlinux-repository",
                            builderNames=["archlinux-i686", "archlinux-x86_64"]))

# Rebuild Fedora packages when a change is submitted
c["schedulers"].append(SingleBranchScheduler(
                            name="fedora-ci-checkin",
                            change_filter=filter.ChangeFilter(branch="master", category="fedora-ci"),
                            treeStableTimer=None,
                            builderNames=["fedora-ci-i386", "fedora-ci-x86_64"]))
# Manually trigger a rebuild of the Fedora repository
c["schedulers"].append(ForceScheduler(
                            name="fedora-ci-manual", label="Build Fedora repository",
                            builderNames=["fedora-ci-i386", "fedora-ci-x86_64"]))
c["schedulers"].append(Triggerable(
                            name="fedora-ci-repository",
                            builderNames=["fedora-ci-i386", "fedora-ci-x86_64"]))

# Build weekly images (Sunday at 3:00 AM)
c["schedulers"].append(Nightly(
                            name="weekly-image",
                            branch="master",
                            builderNames=["image-i386", "image-x86_64"],
                            dayOfWeek=6, hour=3, minute=0))
# Rebuild images when a change is submitted
c["schedulers"].append(SingleBranchScheduler(
                            name="image-checkin",
                            change_filter=filter.ChangeFilter(branch="master", category="image"),
                            treeStableTimer=None,
                            builderNames=["image-i386", "image-x86_64"]))
# Manually trigger a rebuild of the image
c["schedulers"].append(ForceScheduler(
                            name="image-manual", label="Build Fedora CI image",
                            builderNames=["image-i386", "image-x86_64"]))
c["schedulers"].append(Triggerable(
                            name="image-repository",
                            builderNames=["image-i386", "image-x86_64"]))

####### BUILDERS

# The 'builders' list defines the Builders, which tell Buildbot how to perform a build:
# what steps, and which slaves can execute them.  Note that any particular build will
# only take place on one slave.

from buildbot.process.factory import BuildFactory
from buildbot.steps.source.git import Git

# Factory for repository builds
pkgbuilds_gitrepo=Git(repourl="git://github.com/hawaii-desktop/hawaii-pkgbuilds.git", mode="incremental")
factories = {
    "archlinux": {
        "i686": archlinux.RepositoryFactory([pkgbuilds_gitrepo], arch="i686"),
        "x86_64": archlinux.RepositoryFactory([pkgbuilds_gitrepo], arch="x86_64")
    },
}

from buildbot.config import BuilderConfig

c["builders"] = []
# ArchLinux
c["builders"].append(
    BuilderConfig(name="archlinux-i686",
      slavenames=["x86_64-archlinux-01"],
      factory=factories["archlinux"]["i686"]))
c["builders"].append(
    BuilderConfig(name="archlinux-x86_64",
      slavenames=["x86_64-archlinux-01"],
      factory=factories["archlinux"]["x86_64"]))
# Fedora
c["builders"].append(
    BuilderConfig(name="fedora-ci-i386",
      slavenames=["x86_64-fedora-01"],
      factory=fedora.CiFactory(fedora_sources, arch="i386", distro="22")))
c["builders"].append(
    BuilderConfig(name="fedora-ci-x86_64",
      slavenames=["x86_64-fedora-01"],
      factory=fedora.CiFactory(fedora_sources, arch="x86_64", distro="22")))
# Image
c["builders"].append(
    BuilderConfig(name="image-i386",
      slavenames=["x86_64-fedora-01"],
      factory=fedora.ImageFactory(image_repourl, arch="i386", distro="22")))
c["builders"].append(
    BuilderConfig(name="image-x86_64",
      slavenames=["x86_64-fedora-01"],
      factory=fedora.ImageFactory(image_repourl, arch="x86_64", distro="22")))

####### STATUS TARGETS

# "status" is a list of Status Targets. The results of each build will be
# pushed to these targets. buildbot/status/*.py has a variety to choose from,
# including web pages, email senders, and IRC bots.

c["status"] = []

####### PROJECT IDENTITY

# the "title" string will appear at the top of this buildbot
# installation"s html.WebStatus home page (linked to the
# "titleURL") and is embedded in the title of the waterfall HTML page.

c["title"] = "Hawaii"
c["titleURL"] = "https://hawaii-desktop.github.io"

# the "buildbotURL" string should point to the location where the buildbot"s
# internal web server (usually the html.WebStatus page) is visible. This
# typically uses the port number set in the Waterfall "status" entry, but
# with an externally-visible host name which the buildbot cannot figure out
# without some help.

c["buildbotURL"] = "http://localhost:8020/"

# minimalistic config to activate new web UI
from buildbot.www import auth

c["www"] = dict(port=8020,
                plugins=dict(waterfall_view={}, console_view={}),
                auth=auth.UserPasswordAuth([("pierluigi.fiorini@gmail.com", "password")]))

####### DB URL

c["db"] = {
    # This specifies what database buildbot uses to store its state.  You can leave
    # this at its default for all but the largest installations.
    "db_url" : "sqlite:///state.sqlite",
}
